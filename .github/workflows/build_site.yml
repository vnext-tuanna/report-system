name: Build Application

on:
  pull_request:
    branches: [ develop ]

jobs:
  build:
    name: Laravel 8.x & PHP 7.4
    runs-on: ubuntu-latest
    env:
      DB_DATABASE: laravel
      DB_USERNAME: root
      DB_PASSWORD: password
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: laravel
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: '7.4'
          extensions: mbstring, dom, xml, mysql
      - name: Start mysql service
        run: sudo /etc/init.d/mysql start
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader
      - name: Prepare the application
        run: |
          php -r "file_exists('.env') || copy('.env.example', '.env');"
          php artisan key:generate
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Clear & cache config
        run: php artisan config:cache
      - name: Clear & cache view
        run: php artisan view:cache
#      - name: Run Migration
#        id: build-app
#        run: php artisan migrate:fresh --seed
#        env:
#          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
      - name: Run PHPCS for the codestyle
        id: vnext-coding-standards
        run: vendor/bin/phpcs --standard=phpcs.xml --extensions=php --encoding=utf-8 .
#      - name: Test with phpunit
#        id: php-unit-tests
#        run: vendor/bin/phpunit --coverage-text
